name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "Choose the platform (android or ios)"
        required: true
        default: "android"
        type: choice
        options:
          - android
          - ios
      environment:
        description: "Choose the environment (staging, production, or store)"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
          - store

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      - name: Set up environment variables
        run: |
          echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV
          echo "FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}" >> $GITHUB_ENV
          if [ "${{ github.event.inputs.platform }}" == "android" ] && [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_STAGING_APP_ID_ANDROID }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.platform }}" == "android" ] && [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_PRODUCTION_APP_ID_ANDROID }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.platform }}" == "ios" ] && [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_STAGING_APP_ID_IOS }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.platform }}" == "ios" ] && [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_PRODUCTION_APP_ID_IOS }}" >> $GITHUB_ENV
          fi

      - name: Get release notes
        run: |
          if [ -f "CHANGELOG.md" ]; then
            RELEASE_NOTES=$(head -n 20 CHANGELOG.md)
          else
            RELEASE_NOTES="CHANGELOG.md not found"
          fi
          echo "Release notes: $RELEASE_NOTES"

      - name: Build the app
        run: |
          if [ "${{ github.event.inputs.platform }}" == "android" ] && [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            npx eas-cli build --platform android --profile previewStaging --non-interactive
          elif [ "${{ github.event.inputs.platform }}" == "android" ] && [ "${{ github.event.inputs.environment }}" == "production" ]; then
            npx eas-cli build --platform android --profile previewProduction --non-interactive
          elif [ "${{ github.event.inputs.platform }}" == "ios" ] && [ "${{ github.event.inputs.environment }}" == "staging" ]; then
            npx eas-cli build --platform ios --profile previewStaging --non-interactive
          elif [ "${{ github.event.inputs.platform }}" == "ios" ] && [ "${{ github.event.inputs.environment }}" == "production" ]; then
            npx eas-cli build --platform ios --profile previewProduction --non-interactive
          elif [ "${{ github.event.inputs.platform }}" == "android" ] && [ "${{ github.event.inputs.environment }}" == "store" ]; then
            npx eas-cli build --platform android --profile production --auto-submit --non-interactive
          elif [ "${{ github.event.inputs.platform }}" == "ios" ] && [ "${{ github.event.inputs.environment }}" == "store" ]; then
            npx eas-cli build --platform ios --profile production --auto-submit --non-interactive
          fi

      - name: Download build artifact
        if: ${{ github.event.inputs.environment != 'store' }}
        run: |
          BUILD_URL=$(npx eas-cli build:list --platform ${{ github.event.inputs.platform }} --status finished --limit 1 --non-interactive --json | jq -r '.[0].artifacts.buildUrl')
          if [ "${{ github.event.inputs.platform }}" == "android" ]; then
            curl -L -o app.apk "$BUILD_URL"
          else
            curl -L -o app.ipa "$BUILD_URL"
          fi

      - name: Deploy to Firebase App Distribution
        if: ${{ github.event.inputs.environment != 'store' }}
        run: |
          if [ "${{ github.event.inputs.platform }}" == "android" ]; then
            firebase appdistribution:distribute app.apk --app $FIREBASE_APP_ID --token $FIREBASE_TOKEN
          else
            firebase appdistribution:distribute app.ipa --app $FIREBASE_APP_ID --token $FIREBASE_TOKEN
          fi